on:
  workflow_call:
    secrets:
      WI_PROVIDER:
        description: Workload Identity Provider
        required: true
      WIF_SA:
        description: Workload Identity Provider Service Account
        required: true
    inputs:
      environment:
        type: string
        required: true
        description: Name of the target environment.    
      ref:  
        type: string
        required: true
        description: The tag or SHA to checkout.
        
jobs:
  run-test:
    runs-on: ubuntu-latest # use 'ubuntu-latest' to use github action runner
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --output-format=github --target-version=py39 .
        continue-on-error: true

      - name: Test with pytest
        run: |
          coverage run -m pytest  -v -s

      - name: Generate test report
        run: |
          coverage report -m

  build:
    needs: run-test
    runs-on: ubuntu-latest # use 'ubuntu-latest' to use github action runner
    environment: ${{ inputs.environment }}

    steps:
      # Checkout repo for build
      - name: Checkout
        uses: actions/checkout@v3

      # Authenticate to Google Cloud using Workload Identity Provider
      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WI_PROVIDER }}'
          service_account: '${{ secrets.WIF_SA }}'

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ vars.REGION }}-docker.pkg.dev'

      # Build, Tag and Push image to Artifact Registry
      - name: Build, tag and push container
        id: build-image
        uses: docker/build-push-action@v3
        with:
          context: ${{ vars.code_directory }}
          push: true 
          tags: |
            ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.ARTIFACT_REPO }}/${{ vars.SERVICE_NAME }}:${{ inputs.ref }}
    
      # Deploy image to Cloud Run
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ vars.SERVICE_NAME }}
          region: ${{ vars.REGION }}
          image: '${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.ARTIFACT_REPO }}/${{ vars.SERVICE_NAME }}:${{ inputs.ref }}'
          flags: '--port=5000 --allow-unauthenticated'

      # Display Cloud Run URL
      - name: Cloud Run Production URL
        run: echo ${{ steps.deploy.outputs.url }}